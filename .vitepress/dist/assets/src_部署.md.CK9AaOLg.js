import{_ as s,c as i,o as a,a1 as e}from"./chunks/framework.B2LAFC3B.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"src/部署.md","filePath":"src/部署.md"}'),n={name:"src/部署.md"},t=e(`<h2 id="华为云部署" tabindex="-1">华为云部署 <a class="header-anchor" href="#华为云部署" aria-label="Permalink to &quot;华为云部署&quot;">​</a></h2><ul><li><strong>准备</strong></li></ul><p><code>服务器: root@124.70.143.16 镜像: CentOS 8.0 </code></p><ul><li><p><strong>安装准备</strong> 要在CentOS 8.0中安装Docker，你可以遵循以下步骤进行操作：</p><ol><li><strong>更新系统</strong>： 首先，确保你的系统是最新的。打开终端并运行以下命令：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> check-update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span></span></code></pre></div><ol start="2"><li><strong>安装必要的依赖</strong>： 为了能够正确安装Docker，你需要安装一些依赖项。可以使用以下命令安装：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum-utils</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> device-mapper-persistent-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lvm2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum-utils</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 安装的是提示找不到地址：</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 因为社区已经不维护了，</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 要使用阿里云镜像，</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 修改/etc/yum.repos.d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 下的文件，切换到阿里云镜像，</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 然后</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> makecache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 上述两个指令执行成功后再执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum-utils</span></span></code></pre></div><ol start="3"><li><strong>添加Docker的YUM仓库</strong>： Docker提供了官方的YUM仓库，可以通过添加这个仓库来简化安装过程。考虑到网络因素，推荐使用阿里云的镜像源，这样可以加速下载过程。执行以下命令添加仓库：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum-config-manager</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config-manager</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://download.docker.com/linux/centos/docker-ce.repo</span></span></code></pre></div><ol start="4"><li><strong>安装Docker CE</strong>： 更新YUM的软件包缓存，并安装Docker CE：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> makecache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fast</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 实际未执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> containerd.io</span></span></code></pre></div><p>如果<code>yum makecache fast</code>命令报错，尝试去掉<code>fast</code>参数再次执行。</p><ol start="5"><li><strong>启动并启用Docker服务</strong>： 安装完成后，启动Docker服务，并设置为开机启动：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre></div><ol start="6"><li><strong>验证安装</strong>： 通过运行一个简单的Docker命令来验证是否安装成功：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">edocker</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello-world</span></span></code></pre></div><p>如果一切顺利，你将看到来自Docker的欢迎信息。</p><p>请注意，尽管上述步骤基于较新信息和普遍做法，但在实际操作时，建议查阅Docker官方文档以获取最新安装指南，因为软件包名称和步骤可能会随着时间而变化。此外，考虑到你的提问时间是2024年，尽管提供的信息是最近的，但最好还是检查是否有更新的版本或安装方法。</p><h3 id="安装docker-compose" tabindex="-1">安装Docker Compose <a class="header-anchor" href="#安装docker-compose" aria-label="Permalink to &quot;安装Docker Compose&quot;">​</a></h3><p>由于Docker Compose现在作为一个独立的二进制文件分发，可以直接下载并安装：</p><ol><li><strong>下载Docker Compose</strong>: 首先，查看Docker Compose的最新版本号，然后下载对应版本的二进制文件。这里以通用的命令为例，获取最新版本的Docker Compose（请在实际操作前访问[Docker Compose的GitHub发布页面](Releases · docker/compose)查询最新版本号）：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)-$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/docker-compose</span></span></code></pre></div><ol start="2"><li><strong>设置权限</strong>: 给<code>docker-compose</code>文件赋予执行权限：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/docker-compose</span></span></code></pre></div><ol start="3"><li><strong>验证Docker Compose安装</strong>: 确认Docker Compose安装成功：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><p>至此，您应该已经在CentOS 8上成功安装了Docker和Docker Compose，可以开始使用它们部署和管理容器化应用了。</p></li></ul><h2 id="marvinjs-服务安装" tabindex="-1">MarvinJS 服务安装 <a class="header-anchor" href="#marvinjs-服务安装" aria-label="Permalink to &quot;MarvinJS  服务安装&quot;">​</a></h2><ul><li><p><strong>CentOS8.2</strong></p><p><code>安装包</code>：从chemaxon网站<a href="https://download.chemaxon.com/marvin-js" target="_blank" rel="noreferrer">下载</a>，下载的是一个rpm包</p><p>要在Linux服务器上安装一个RPM文件，你可以按照以下步骤操作：</p><h3 id="安装rpm包" tabindex="-1">安装RPM包 <a class="header-anchor" href="#安装rpm包" aria-label="Permalink to &quot;安装RPM包&quot;">​</a></h3><ol><li><p><strong>确保rpm包已上传至服务器</strong>：首先，你需要将RPM文件上传到服务器的某个目录下，比如 <code>/home</code> 或 <code>/usr/local/src</code>。如果你还没有上传，可以使用FTP、SCP或者其他文件传输工具完成这一步。</p></li><li><p><strong>切换到存放rpm文件的目录</strong>：使用命令行工具，通过 <code>cd</code> 命令进入存放rpm文件的目录。例如，如果rpm文件在 <code>/home</code> 目录下，执行 <code>cd /home</code>。</p></li><li><p><strong>安装RPM包</strong>：使用 <code>rpm</code> 命令安装该软件包。通常使用 <code>-ivh</code> 参数，其中 <code>i</code> 表示安装 (<code>install</code>)，<code>v</code> 表示详细模式 (<code>verbose</code>)，<code>h</code> 表示显示进度 (<code>hash mark</code>)。命令格式如下：</p></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo rpm -ivh your_package_name.rpm</span></span></code></pre></div><p>将 <code>your_package_name.rpm</code> 替换为你的实际rpm文件名。</p><h3 id="配置通过ip和端口访问接口" tabindex="-1">配置通过IP和端口访问接口 <a class="header-anchor" href="#配置通过ip和端口访问接口" aria-label="Permalink to &quot;配置通过IP和端口访问接口&quot;">​</a></h3><p>安装完成后，如果这个rpm包包含了一个可以通过网络访问的服务或接口，你可能需要进行以下配置以便通过IP和端口访问：</p><ol><li><strong>配置文件修改</strong>：找到该服务的配置文件，位于 <code>/opt/chemaxon/mjs-webservice/config/application.properties</code> 目录下, 修改端口为8082（根据自己服务的配置）， 原先默认的是8080， 修改后的配置文件如下：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># See more on: https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html</span></span>
<span class="line"><span>server.port=8082</span></span>
<span class="line"><span>logging.file.name=./logs/mjsws.log</span></span>
<span class="line"><span>spring.application.name=marvin-js-mini</span></span>
<span class="line"><span></span></span>
<span class="line"><span>logging.level.com.chemaxon.webservices.marvinjs.component.OnStartLicenseChecker=info</span></span>
<span class="line"><span></span></span>
<span class="line"><span>server.error.include-message=ALWAYS</span></span>
<span class="line"><span>server.error.include-binding-errors=ALWAYS</span></span>
<span class="line"><span></span></span>
<span class="line"><span>marvinjs.license.controller.enabled=false</span></span></code></pre></div><ol start="2"><li><strong>服务启动与状态检查</strong>：首先，确定服务是否已经自动启动，如果没有，手动启动服务。可以使用 <code>systemctl</code> 命令（对于使用systemd的系统，如CentOS 7及以上版本、Fedora等）来管理服务，例如：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl start your_service_name.service</span></span>
<span class="line"><span>sudo systemctl status your_service_name.service</span></span></code></pre></div><p><code>先修改配置文件</code>： 位于 <code>/etc/systemd/system/</code>目录下</p><p>。</p><ol start="3"><li><strong>防火墙配置</strong>：确保服务器的防火墙允许外部访问你设定的端口。使用 <code>firewall-cmd</code>（对于使用firewalld的系统）添加端口规则，例如：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo firewall-cmd --permanent --add-port=8080/tcp</span></span>
<span class="line"><span>sudo firewall-cmd --reload</span></span></code></pre></div><ol start="4"><li><strong>重启服务</strong>：修改配置后，记得重启服务使更改生效：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo systemctl restart your_service_name.service</span></span></code></pre></div><ol start="5"><li><strong>测试访问</strong>：最后，在另一台设备上尝试通过 <code>ip:port</code> 访问该服务的接口，确认配置成功。</li></ol></li></ul>`,6),l=[t];function p(h,o,k,r,d,c){return a(),i("div",null,l)}const y=s(n,[["render",p]]);export{g as __pageData,y as default};
